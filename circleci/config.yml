version: 2.1

orbs:

  python: circleci/python@1.2
  heroku: circleci/heroku@1.2.6

jobs:

  build-and-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip

      - run:
          name: Run tests
          environment:
            SECRET_KEY: jpw^jejwxxs-k!&$t-=3xe9qy*=gq=qpebjlhil225v(47t1g!
          command: pytest -s --no-migrations

      - run:
          name: linting PEP8
          command: flake8

  deploy_to_docker_hub:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push image to Docker_hub
          command: |
            docker login -u ${HUB_NAME} -p ${HUB_PSWD}
            docker build -t ${HUB_NAME}/projet_13:$CIRCLE_SHA1 .
            docker push ${HUB_NAME}/projet_13:$CIRCLE_SHA1

  build-and-deploy:
    environment:
      IMAGE_NAME: christopheringot/projet_13:$CIRCLE_SHA1 .
    docker:
      - image: cimg/python:3.8
    steps:
      - setup_remote_docker
      - checkout
      - heroku/install

      - run:
          command: sudo curl https://cli-assets.heroku.com/install.sh | sh

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            create oc-lettings-cr || true

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            container:push -a oc-lettings-cr web

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            config:set SECRET_KEY=$SECRET_KEY -a oc-lettings-cr

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN}
            heroku config:set SENTRY_DSN=$SENTRY_DSN -a oc-lettings-cr

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a oc-lettings-cr web
workflows:
  build_test_deploy:
    jobs:

      - build-and-test

      - deploy_to_docker_hub:
          requires:
            - build-and-test
          filters:
            branches:
              only: master

      - build-and-deploy:
          requires:
            - deploy_to_docker_hub
          filters:
            branches:
              only: master